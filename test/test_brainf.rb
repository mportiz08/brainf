require 'test_helper'
require 'brainf'

class TestBrainfInterpreter < Test::Unit::TestCase
  def setup
    @interpreter = BrainF::Interpreter.new
  end
  
  def test_hello_world
    # prints "Hello, world!"
    # from http://codegolf.com/competition/run/8/1
    program = <<-PROGRAM
      >+++++++++[<++++++++>-]<.>+++++++[<++++>-]<+.+++++++..+++.[-]>++++++++[<++++>-]
      <.>+++++++++++[<++++++++>-]<-.--------.+++.------.--------.[-]>++++++++[<++++>-
      ]<+.[-]++++++++++.
    PROGRAM
    
    test_interpreter program, "Hello world!\n"
  end
  
  def test_squares
    # lists all square numbers up to 10,000
    # from http://codegolf.com/competition/run/8/3
    program = <<-PROGRAM
      ++++[>+++++<-]>[<+++++>-]+<+[>[>+>+<<-]++>>[<<+>>-]>>>[-]++>[-]+>>>+[[-]++++++>
      >>]<<<[[<++++++++<++>>-]+<.<[>----<-]<]<<[>>>>>[>>>[-]+++++++++<[>-<-]+++++++++
      >[-[<->-]+[<<<]]<[>+<-]>]<<-]<<-]
    PROGRAM
    
    output = <<-RESULT.unindent
      0
      1
      4
      9
      16
      25
      36
      49
      64
      81
      100
      121
      144
      169
      196
      225
      256
      289
      324
      361
      400
      441
      484
      529
      576
      625
      676
      729
      784
      841
      900
      961
      1024
      1089
      1156
      1225
      1296
      1369
      1444
      1521
      1600
      1681
      1764
      1849
      1936
      2025
      2116
      2209
      2304
      2401
      2500
      2601
      2704
      2809
      2916
      3025
      3136
      3249
      3364
      3481
      3600
      3721
      3844
      3969
      4096
      4225
      4356
      4489
      4624
      4761
      4900
      5041
      5184
      5329
      5476
      5625
      5776
      5929
      6084
      6241
      6400
      6561
      6724
      6889
      7056
      7225
      7396
      7569
      7744
      7921
      8100
      8281
      8464
      8649
      8836
      9025
      9216
      9409
      9604
      9801
      10000
    RESULT
    
    test_interpreter program, output
  end
  
  def test_text_to_bf
    # Outputs a bf program which outputs the text given to the original bf program if executed
    # from http://codegolf.com/competition/run/8/4
    program = ',[>>++++++[-<+++++++>]<+<[->.<]>+++.<++++[->++++<]>.>,]'
    
    input  = 'january'
    output = <<-RESULT.unindent.as_one_line
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++.>++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++.>++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +.>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++.>++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++.>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>
    RESULT
    test_interpreter_with_input program, input, output
    
    input  = 'elephant'
    output = <<-RESULT.unindent.as_one_line
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++++++++++++++++++++.>+++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++.>++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++.>++++++++++++++++++++++++++++++++++++++++++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>+++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +.>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++++++++++++++++++++++++++++++++.>+++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>
    RESULT
    test_interpreter_with_input program, input, output
    
    input  = 'yellow'
    output = <<-RESULT.unindent.as_one_line
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++++++++++++++++++++++++++++++++++++++++.>+++++++++++++++++++++++++++++++++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>+++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++++++++++++++++.>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++.>++++++++++++++++++++++++++++
      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++.>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++++++++++++++++++++++++++++++++++++++++++++.>
    RESULT
    test_interpreter_with_input program, input, output
  end
  
  private
  
  def test_interpreter(program, expected_result)
    mock_stdout do
      @interpreter.eval(program)
      assert_equal expected_result, $stdout.string
    end
  end
  
  def test_interpreter_with_input(program, input, expected_result)
    mock_stdin(input) { test_interpreter(program, expected_result) }
  end
end
